/*
- Event Loop 事件循环（事件循环是一种运行机制，主线程只是参与者之一，循环的这种动作是主线程的一种行为）
  1、所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。
     - 执行栈中的js代码是是由JS引擎线程调用，并在JS引擎中执行的，此线程会阻塞主线程
  2、主线程之外，还存在一个"任务队列"（task queue）。只要异步任务有了运行结果，就在"任务队列"之中放置一个事件。
     - 这些任务都是由各种其它线程控制的事件添加的，比如：
       - 事件触发线程，所有的事件想要被触发都会先添加到此线程中，然后此线程再负责把对应的事件添加到任务队列中
       - 定时触发器线程，处理setInterval与setTimeout事件的计数，到时间后会负责把此事件添加到事件触发线程中
       - 异步http请求线程，处理XMLHttpRequest的请求
  3、一旦"执行栈"中的所有同步任务执行完毕，系统就会读取"任务队列"，如果有有执行任务，则进入执行栈，开始执行。
  4、主线程不断重复上面的三步，此过程也就是常说的Event Loop(事件循环)。
  - 特别说明：任务队列中也会有BeginFrame任务，当主线程的事件循环读取到此任务后就会开始BeginFrame的工作
*/

/*
- 一些难点说明：
https://juejin.cn/post/6994750650118570014  - todo

接下来把事件循环涉及到的方方面面都总结一下：
- 都涉及到哪些概念，比如：tick
- 消息队列、任务队列，区别是什么？
- 宏任务、微任务，微任务是有哪个线程负责调度给js引擎的？有微任务列表吗？宏任务列表有吗？消息队列代表的就是宏任务队列？
- 都用到了哪些线程和哪些引擎，分别是负责什么工作的，比如渲染引擎是负责哪一部分的，有渲染线程吗还是说这已经过时了
- 各个环节直接是如果触发和调度的，比如Vsync fired to begin frame
- 消息队列中的一个消息对应的就是一个事件吗？执行完一个事件会把主线程让出来，这个时候主线程如果接受到了Vsync的消息，那么就会执行BeginFrame？
- 任务优先级划分和调度策略，参考：https://blog.csdn.net/kaimo313/article/details/118159117
*/