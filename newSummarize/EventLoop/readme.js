/*
- 参考链接
  - whatwg 官方对 Event loops 的详细介绍：
    - https://html.spec.whatwg.org/multipage/webappapis.html#event-loops
  - 消息队列和事件循环（Event Loop）：
    - https://www.cnblogs.com/suihang/p/13436877.html
*/

/*
- 进程与线程
  - 进程：是操作系统分配给应用程序用来运行任务的载体，占据一块独立的内存，一个应用程序可以申请开辟多个进程
  - 线程：是由进程细分出来的，是程序执行流的最小单元，一个进程可以是多线程的，进程可以根据需求来调度不同的线程
  - 总结：一个进程由一个或多个线程组成，多个线程可协同工作（共享内存空间）
- 宿主环境
  - 浏览器
  - Node
- 引擎分类
  - 渲染引擎：是浏览器的核心，Render进程和GPU进程都是浏览器从操作系统中申请出来给渲染引擎来用的
  - JS引擎：属于渲染引擎的一个子模块，会开启一个JS引擎线程，是Render进程分出来的一个专门给JS引擎来执行JS代码的线程
- 进程分类
  - Render进程
  - GPU进程
- 线程关系疏离
  - 从宏观上看：
    - 主线程 = GUI 渲染线程/ JS 引擎线程 因为二者互斥不会同时运行且都会阻塞UI 也有叫UI线程的
    - 工作线程 = 事件触发线程 + 定时触发器线程 + 异步 HTTP 请求线程 + web works 等用户执行耗时任务的线程
    - 合成线程：用于合成帧的线程/一些动画属性变化也可以单独在这个线程运行 不需要经过主线程 提高渲染性能
    - raster线程：和合成线程共同作用 用于同层分块的 提高渲染性能
  - 从微观上看：
    - GUI 渲染线程：负责执行DOM解析、CSSOM解析、Layout、Paint、Composite
    - JS 引擎线程：负责执行js代码
    - 定时触发线程：负责计数，到时间了，就推送给事件触发线程来处理
    - 事件触发线程：负责把不同的事件回调放入到对应优先级的消息列表中
    - 异步http请求线程：负责ajax请求，并把response回调推送给事件触发线程来处理
- 相关文章总结：
  - JavaScript与浏览器 - 线程与引擎
    - https://lq782655835.github.io/blogs/js/http-base-2.browser.html
*/

/*
- Event Loop 事件循环（事件循环是一种运行机制，主线程只是参与者之一，循环的这种动作是主线程的一种行为）
  1、所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。
     - 执行栈中的js代码是是由JS引擎线程调用，并在JS引擎中执行的，此线程会阻塞主线程
  2、主线程之外，还存在一个"消息队列"。只要异步任务有了运行结果，就在"消息队列"之中放置一个事件消息。
     - 消息队列：根据事件源的分为来优先级不同的消息分类列表，每个消息中是要执行的js任务
     - 这些消息都是由各种其它线程控制的事件添加的，比如：
       - 事件触发线程，所有的事件想要被触发都会先添加到此线程中，然后此线程再负责把对应的事件添加到任务队列中
       - 定时触发器线程，处理setInterval与setTimeout事件的计数，到时间后会负责把此事件添加到事件触发线程中
       - 异步http请求线程，处理XMLHttpRequest的请求
  3、一旦"执行栈"中的所有同步任务执行完毕，系统就会读取"任务队列"，如果有有执行任务，则进入执行栈，开始执行。
  4、主线程不断重复上面的三步，此过程也就是常说的Event Loop(事件循环)。

- 特别说明：
  - 任务队列中也会有BeginFrame任务，当主线程的事件循环读取到此任务后就会开始BeginFrame的工作
  - 有一个事件叫做渲染事件，它就是用来触发BeginFrame任务的

- 微任务队列：
  - 作用：用来精确控制js的执行时机和顺序，执行一些高优先级的代码
  - 产生方式：Promise、MutationObserver
  - 谁负责维护：是有JS引擎维护的一个微任务列表
*/

/*
- 一些难点说明：
https://juejin.cn/post/6994750650118570014  - todo

接下来把事件循环涉及到的方方面面都总结一下：
- 都涉及到哪些概念，比如：tick
- 消息队列、任务队列，区别是什么？
- 宏任务、微任务，微任务是有哪个线程负责调度给js引擎的？有微任务列表吗？宏任务列表有吗？消息队列代表的就是宏任务队列？
- 都用到了哪些线程和哪些引擎，分别是负责什么工作的，比如渲染引擎是负责哪一部分的，有渲染线程吗还是说这已经过时了
- 各个环节直接是如果触发和调度的，比如Vsync fired to begin frame
- 消息队列中的一个消息对应的就是一个事件吗？执行完一个事件会把主线程让出来，这个时候主线程如果接受到了Vsync的消息，那么就会执行BeginFrame？
- 任务优先级划分和调度策略，参考：https://blog.csdn.net/kaimo313/article/details/118159117
*/